angular.module("firstlife.factories").factory("notificationFactory",["$http","$q","$rootScope","$log","myConfig","MemoryFactory","rx",function(e,t,o,r,i,a,n){function p(e,t){u[e]||(u[e]=new Array),r.debug("subscribers",u[e]);var o=u[e].indexOf(t);0>o&&u[e].push(t),r.debug("subscribers",u[e])}function g(e,t){if(!u[e])return!1;var o=u[e].indexOf(t);o>-1&&u[e].splice(o,1),r.debug("subscribers",u[e])}var l=this;l.config=i;var s=i.base_domain,c=i.backend_things,f=(i.backend_notifications,config.format),u={};return{get:function(o){var n=t.defer(),l=a.get("user");if(l){var c=s.concat("api/notifications/unread");c=c.concat("?user=").concat(l.id).concat("&domain=").concat(i.project),o&&(c=c.concat("&since=").concat(o.toISOString()));var d={url:c,method:"GET",headers:{"Content-Type":"application/json"},data:!0};e(d).then(function(e){r.debug("notificationFactory, get, response ",e),n.resolve(e.data.notifications)},function(e){r.error("notificationFactory, get, response ",e),n.reject(e)})}else r.error("user error"),n.reject("not logged in");return n.promise},read:function(o){var i=t.defer(),n=a.get("user"),l=a.get("token");if(n&&l){var c=s.concat("api/notifications/consume"),d={url:c,method:"PUT",headers:{"Content-Type":"application/json",Authorization:l},data:{user_id:n.id,id:o}};e(d).then(function(e){r.debug("EntityFactory, read, response ",e),i.resolve(e.data)},function(e){r.error("EntityFactory, read, response ",e),i.reject(e)})}else i.reject("not logged in");return i.promise},consume:function(){var o=t.defer(),n=a.get("user"),l=a.get("token");if(n&&l){var c=s.concat("api/notifications/consume_until"),d=new Date,f={url:c,method:"PUT",headers:{"Content-Type":"application/json",Authorization:l},data:{user_id:n.id,until:d.toISOString(),domain:i.project}};e(f).then(function(e){r.debug("EntityFactory, consume, response ",e),o.resolve(e.data)},function(e){r.error("EntityFactory, consume, response ",e),o.reject(e)})}else o.reject("not logged in");return o.promise},subscribers:function(o){var i=t.defer();if(u[o])i.resolve(u[o]);else{var a=c.concat("/").concat(o).concat("/subscribers").concat(f),n={url:a,method:"GET",headers:{"Content-Type":"application/json"},data:!0};e(n).then(function(e){r.debug("notificationFactory, subscribes, response ",e),u[o]=e.data.users,i.resolve(e.data.users)},function(e){r.error("notificationFactory, subscribes, response ",e),i.reject(e)})}return i.promise},subscribersRx:function(t){var o=c.concat("/").concat(t).concat("/subscribers").concat(f),r={url:o,method:"GET",headers:{"Content-Type":"application/json"},data:!0};return n.Observable.fromPromise(e(r)).map(function(e){return e.data.users}).retry().share()},subscribe:function(o){var i=t.defer(),n=a.get("user"),l=a.get("token");if(n&&l){var s=c.concat("/").concat(o).concat("/subscribe").concat(f),d={url:s,method:"PUT",headers:{"Content-Type":"application/json",Authorization:l},data:{user_id:n.id}};e(d).then(function(e){r.debug("EntityFactory, subscribe, response ",e),i.resolve(e.data),p(o,n.id)},function(e){r.error("EntityFactory, subscribe, response ",e),i.reject(e)})}else i.reject("not logged in");return i.promise},unsubscribe:function(o){var i=t.defer(),n=a.get("user"),l=a.get("token");if(n&&l){var s=c.concat("/").concat(o).concat("/unsubscribe").concat(f),d={url:s,method:"PUT",headers:{"Content-Type":"application/json",Authorization:l},data:{user_id:n.id}};e(d).then(function(e){r.debug("EntityFactory, unsubscribe, response ",e),i.resolve(e.data),g(o,n.id)},function(e){r.error("EntityFactory, unsubscribe, response ",e),i.reject(e)})}else i.reject("not logged in");return i.promise}}}]);
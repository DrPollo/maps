angular.module("firstlife.factories").factory("SimpleEntityFactory",["$q","$http","$log","myConfig","MemoryFactory",function(e,t,o,r,i){return{get:function(r,i){var a=e.defer(),n={url:url.concat("/").concat(r).concat("/").concat(types[i].url).concat(format),method:"GET",headers:{"Content-Type":"application/json"}};return t(n).then(function(e){comments[r]=e,a.resolve(e.data)},function(e){o.error("SimpleEntityFactory, get, error: ",e),a.reject(e)}),a.promise},add:function(r,a,n){var l=e.defer(),s=i.get("token"),c=i.get("user");a.user_id=c.id;var d={url:url.concat("/").concat(r).concat("/").concat(types[n].url).concat("/").concat("add").concat(format),method:"PUT",headers:{"Content-Type":"application/json",Authorization:s},data:a};return t(d).then(function(e){l.resolve(e)},function(e){o.error("SimpleEntityFactory, add, error: ",e),l.reject(e)}),l.promise},update:function(r,a,n){var l=e.defer(),s=i.get("token"),c=i.get("user");a.user_id=c.id;var d={url:base_url.concat(types[n].url).concat("/").concat(r).concat("/update").concat(format),method:"PUT",headers:{"Content-Type":"application/json",Authorization:s},data:a};return t(d).then(function(e){l.resolve(e)},function(e){o.error("SimpleEntityFactory, add, error: ",e),l.reject(e)}),l.promise},"delete":function(r,a){var n=e.defer(),l=i.get("token"),s={url:base_url.concat(types[a].url).concat("/").concat(r).concat("/delete").concat(format),method:"DELETE",headers:{"Content-Type":"application/json",Authorization:l},data:{}};return t(s).then(function(e){n.resolve(e)},function(e){o.error("SimpleEntityFactory, delete, error: ",e),n.reject(e)}),n.promise}}}]).run(function(e){self.types=e.types.simpleEntities,self.format=e.format,self.config=e,self.url=e.backend_things,self.base_url=e.domain_signature,self.comments={}});
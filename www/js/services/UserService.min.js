angular.module("firstlife.services").service("UserService",["$q","$http","$log","myConfig","jwtHelper","MemoryFactory",function(e,o,r,t,n,a){function g(e){console.log("UserService, login/registration, setUser headers.Authorization: ",e),a.save("token",e);var o=n.decodeToken(e);return o.displayName&&""!=o.displayName||(o.displayName=1==o.type&&o.first_name&&o.last_name?o.first_name.concat(" ").concat(o.last_name):2==o.type&&o.name?o.name:"User"),a.save("user",o),console.log("UserService, login, utente: ",o),self.user=o,self.isLoggedIn=!0,o}self.config=t;var i=config.backend_users,s=config.backend_organization,c=config.reset_password,l=config.retrieve_password,E=(config.update_user,t.format);return{getInfo:function(){var t=a.get("user");console.log("develop ",t);var n=i.concat("/").concat(t.username).concat(E);2==t.type&&(n=s.concat("/").concat(t.id).concat(E));var c=e.defer(),l={url:n,method:"GET",headers:{"Content-Type":"application/json"}};return o(l).then(function(e){c.resolve(e.data)},function(e){c.reject(e),r.error("UserService, getInfo, error ",e)}),c.promise},login:function(t,a){var s=i.concat("/login").concat(E),c=e.defer(),l=angular.toJson({email:t,password:a},!0),u={url:s,method:"POST",data:l,headers:{"Content-Type":"application/json"}};return o(u).then(function(e){var i=n.decodeToken(e.headers.authorization);r.debug("token utente ",i),c.resolve(i),g(e.headers.authorization)},function(e){r.error("UserService, login, errore: ",e),c.reject(e)}),c.promise},register:function(r){var t=e.defer(),n=i.concat(E);2==r.type&&(n=s.concat(E));var a=angular.toJson(r,!0),c={url:n,method:"POST",data:a,headers:{"Content-Type":"application/json"}};return o(c).then(function(e){t.resolve(e.data)},function(e){console.log("UserService, register, errore: ",e),t.reject(e)}),t.promise},logout:function(){return a.deleteUser(),a.deleteToken(),a.deleteConfig(),!0},update:function(r){var t=e.defer(),n=i.concat(E);2==r.type&&(n=s.concat(E));var c=angular.toJson(r,!0),l=a.get("token"),u={url:n,method:"PUT",data:c,headers:{"Content-Type":"application/json",Authorization:l}};return o(u).then(function(e){console.log("AuthServices, update, response: ",e),t.resolve(r)},function(e){t.reject(e)}),t.promise},resetPassword:function(r){var t=e.defer(),i=a.get("token"),s=c.concat(E),l={};l.new_pass=r;var u=a.get("user");l.id=u.id,l=angular.toJson(l,!0);var d={url:s,method:"POST",data:l,headers:{"Content-Type":"application/json",Authorization:i}};return console.log("UserService, resetPassword, request: ",d),o(d).then(function(e){console.log("UserService, resetPassword, response: ",e);var i={};i=n.decodeToken(e.headers.authorization),t.resolve(i),g(e.headers.authorization)},function(e){t.reject(e)}),t.promise},retrievePassword:function(r){var t=e.defer(),n=l.concat("/").concat(r),a={url:n,method:"GET",headers:{"Content-Type":"application/json"}};return o(a).then(function(){t.resolve(!0)},function(e){console.log("UserService, retrievePassword, error: ",e),t.reject(e)}),t.promise},sendVerification:function(r){var t=e.defer(),n=i.concat("/reverify/").concat(r),a={url:n,method:"GET",headers:{"Content-Type":"application/json"}};return o(a).then(function(){t.resolve(!0)},function(e){console.log("UserService, sendVerification, error: ",e),t.reject(e)}),t.promise}}}]);
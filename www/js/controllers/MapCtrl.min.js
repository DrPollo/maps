angular.module("firstlife.controllers").controller("MapCtrl",["$scope","$state","$stateParams","$ionicModal","$ionicActionSheet","$ionicPopup","$cordovaGeolocation","$ionicLoading","$q","$ionicPopover","$rootScope","$window","$location","$filter","$timeout","leafletData","leafletMapEvents","entityFactory","MapService","myConfig","PlatformService","MemoryFactory","AreaService","leafletMarkersHelpers",function(e,t,n,o,r,s,a,d,l,h,u,f,c,p,m,v,g,y,b,_,w,x,E){function P(t){C&&console.log("markerClick! ",t);parseInt(t);b.get(t).then(function(t){e.$broadcast("markerClick",{marker:t})},function(e){C&&console.log("markerClick, get, errore: ",e)})}function A(){var e=c.search();b.getCenter().then(function(t){C&&console.log("centro della mappa, ",t),(e.lat!=t.lat||e.lng!=t.lng||e.zoom!=t.zoom)&&R(t)},function(e){C&&console.log("updatePositionInSearch, MapService.getCenter, errore: ",e)})}function I(e){b.getCenter().then(function(t){t.entity=e,R(t)},function(e){C&&console.log("updatePlaceInSearch, MapService.getCenter, errore: ",e)})}function R(e){for(key in e)self.watchSearchEnabled=!1,c.search(key,e[key]);C&&console.log("nuovi parametri search: ",c.search(),e)}function N(e){self.watchSearchEnabled=!1,c.search(e,null)}function z(t){if(C&&console.log("centro su luogo, id: "+typeof t+" ",t),"object"==typeof t&&"entity"in t&&t.entity)it(t.entity);else if("number"==typeof t)it(t);else if("object"==typeof t&&"bound"in t)C&&console.log("centro su bounds: ",t),F(t);else if("object"==typeof t&&"lat"in t&&"lng"in t){C&&console.log("centro su coordinate: ",t);var i={lat:parseFloat(t.lat),lng:parseFloat(t.lng),zoom:parseInt(t.zoom?t.zoom:M.map.zoom_create)};C&&console.log("centro su coordinate: ",i),F(i)}else if("user"===t)d.show({content:'<div>Localizzazione in corso...<br> Assicurati di aver abilitato il gps o il browser!<i class="icon ion-loading-c"></i></div>',animation:"fade-in",showBackdrop:!1,maxWidth:50,showDelay:0}),a.getCurrentPosition().then(function(i){C&&console.log(t),e.markersFiltered[0]={lat:i.coords.latitude,lng:i.coords.longitude,focus:!0,draggable:!1};var n={lat:i.coords.latitude,lng:i.coords.longitude,zoom:parseInt(M.map.zoom_create)};F(n),d.hide()},function(e){C&&console.log("Location error: ",e),d.hide()});else{var i={lat:parseFloat(e.config.map.map_default_lat),lng:parseFloat(e.config.map.map_default_lng),zoom:parseInt(e.config.map.zoom_level)};F(i)}}function F(e){v.getMap("mymap").then(function(t){if(C&&console.log("MapService, setMapCenter, response: ",t," params ",e),e.bound)t.fitBounds(e.bound);else if(e.zoom){var i=new L.LatLng(e.lat,e.lng);t.setView(i,e.zoom)}else{var i=new L.LatLng(e.lat,e.lng);t.panTo(i)}var n=t.getCenter(),o=t.getZoom(),r={lat:n.lat,lng:n.lng,zoom:o};C&&console.log("Nuovo centro della mappa",r)},function(e){C&&console.log("MapService, setMapCenter, errore: ",e)})}function H(e){C&&console.log("MapCtrl, backFromEditor, entityId: ",e);var t={};if(-1==e){t.title="Errore",t.text="Salvataggio fallito: per favore, riprova in seguito!";var i=r.show({titleText:t.text,cancelText:'<i class="icon ion-ios-arrow-down"></i>',cancel:function(){C&&console.log("CANCELLED")}});C&&console.log("actionSheet",i),u.actionSheet=i,u.actionStatus=!0}if(-2==e){t.title="Successo",t.text="Invio avvenuto con successo: il contenuto verr&agrave; valutato per l'approvazione, verr&agrave; inviata una notifica con il risultato della valutazione.";var i=r.show({titleText:t.text,cancelText:'<i class="icon ion-ios-arrow-down"></i>',cancel:function(){C&&console.log("CANCELLED")}});C&&console.log("actionSheet",i),u.actionSheet=i,u.actionStatus=!0}else if(e>0){t.title="Successo",t.text="Salvataggio avvenuto con successo!",J(e),P(e);var i=r.show({titleText:t.text,cancelText:'<i class="icon ion-ios-arrow-down"></i>',cancel:function(){C&&console.log("CANCELLED")}});C&&console.log("actionSheet",i),u.actionSheet=i,u.actionStatus=!0}else C&&console.log("creazione/modifica ok!")}function W(t){var n=!1,o=function(e,t,i){return C&&console.log("markerFilter, comparison, a, b, equal ",e,t,i),Array.isArray(e)?i?(C&&console.log(e,"==",t,"? ",e==t),e.indexOf(t)>=0):e.indexOf(t)<0:i?(C&&console.log(e,"==",t,"? ",e==t),e==t):(C&&console.log(e,"!=",t,"? ",e!=t),e!=t)};C&&console.log("entry: ",t," Condizioni: ",e.filterConditions);for(key in e.filterConditions){C&&console.log("il tipo e' da includere? ",e.filterConditions[key].includeTypes.indexOf(t.entity_type)>-1);var r=0;if(e.filterConditions[key].includeCondition){var s=t[e.filterConditions[key].includeCondition.property];C&&console.log("check per includeCondition",e.filterConditions[key].includeCondition,s);var a=Object.keys(e.filterConditions[key].includeCondition.value)[0];r=s.map(function(e){return e[a]}).indexOf(e.filterConditions[key].includeCondition.value[a]),C&&console.log("check per includeCondition",r)}if(C&&console.log("il tipo e' da includere? ",e.filterConditions[key].includeTypes.indexOf(t.entity_type)>-1),!e.filterConditions[key].excludeRule&&e.filterConditions[key].includeTypes.indexOf(t.entity_type)>-1&&r>-1){if(e.filterConditions[key].excludeProperty){var d=t[e.filterConditions[key].key];if(C&&console.log("Check esclusione regola: ",e.filterConditions[key].excludeProperty,t,e.filterConditions[key].key,d),!(!d||null===d||"undefined"===d||Array.isArray(d)&&0==d.length||angular.isObject(d)&&angular.equals(d,{})))return!1;C&&console.log("property non impostata per: ",t,"prorpieta'",e.filterConditions[key].key)}var l=e.filterConditions[key].mandatory.condition,h=e.filterConditions[key].mandatory.values,u=e.filterConditions[key].equal,f=h;for(C&&console.log("Condizione: ",e.filterConditions[key]),i=0;i<e.filterConditions[key].values.length;i++)if(C&&console.log("valore i = ",i," valore valutato ",t," per chiave ",e.filterConditions[key].key),o(t[e.filterConditions[key].key],e.filterConditions[key].values[i],u)){if(h&&l)return C&&console.log("checkValues && checkCondition: true, esco "),!1;h&&(C&&console.log("checkValues: true, check = false "),f=!1)}else C&&console.log("val[key] == $scope.filterConditions[key].values[i]"),h||(C&&console.log("!checkValues, check = true"),f=!0);if(l&&!f)return!1;f&&(n=!0)}}return C&&console.log("Test entry: ",t,n),n}function Y(){function i(t,i){for(var n=0;n<t.length;n++){var o=t[n];o.icon=o.icons[e.favCat]?o.icons[e.favCat]:o.icon,o.eTimeline&&(o.eTimeline.icon=o.icons[e.favCat]?o.icons[e.favCat]:o.icon),C&&console.log("Check update ",o.id,!i[o.id]),i[o.id]||(i[o.id]=o,C&&console.log("Aggiungo ",o,i[o.id]))}}function n(e,t){for(key in t){var i=t[key];C&&console.log("Check delete ",i.id,e.map(function(e){return e.id}).indexOf(i.id),e.map(function(e){return e.id}).indexOf(i.id)<0),e.map(function(e){return e.id}).indexOf(i.id)<0&&(C&&console.log("Rimuovo ",t[key]),delete t[key])}}function o(t){C&&console.log("MapCtrl, relationsFixer, val ",t);var i=e.config.types.parent_relations[t.entity_type];for(key in i){var n=i[key];if(C&&console.log("MapCtrl, relationsFixer, check ",t.id," in ",i[key].field),e.filtred.map(function(e){return e.id}).indexOf(t[n.field])>=0)return!1}return!0}function s(t){C&&console.log("updateTimeline init ",t);for(var i in t){var n=t[i].eTimeline;n&&(r.push(n),C&&console.log("updateTimeline add ",n))}for(var i in e.timelineData){var n=r[i];C&&console.log("updateTimeline remove check",n),t[n.id]||(C&&console.log("updateTimeline remove ",n),delete r[i])}r=p("filter")(t,a),C&&console.log("updateTimeline risultato",timelineDataBuffer)}function a(e){return C&&console.log("MapCtrl, boundsFiltering, val ",e," contains ",t.contains([e.lat,e.lng])),t.contains([e.lat,e.lng])}var t={};b.getMapBounds().then(function(r){t=r,C&&console.log("cambio dei Markers, markers da filtrare: ",e.filtred),e.markersFilteredArray=angular.copy(e.filtred),e.markersFilteredArray=p("filter")(e.markersFilteredArray,o),C&&console.log("cambio dei Markers, nuovi markers filtrati: ",e.markersFilteredArray),i(e.markersFilteredArray,e.markersFiltered),n(e.markersFilteredArray,e.markersFiltered),s(e.markersFiltered)},function(e){console.log("MapCtrl, setMapMarkers, MapService.getMapBounds, errore ",e)});var r=[]}function U(){b.updateMarkersDistributed().then(function(t){C&&console.log("updateMarkersDistributed, markers: ",t),angular.extend(e.map.markers,t),C&&console.log("updateMarkersDistributed, risultato: ",e.map.markers.length),Y()},function(e){console.log("updateMarkersDistributed, error",e)}),A()}function q(){e.markersFiltered={},e.markersFilteredArray=[],e.favCat=0,e.filters={},e.filterConditions=[];var t=e.config.types.list,n="key",o="entity_type",r={key:o,name:o,values:[],mandatory:{condition:!0,values:!1},equal:!1,excludeRule:!1,excludeProperty:!1,includeTypes:[]};for(e.filters[o]={list:t,toggle:1,label:"Tipi",check:n,name:o,category_space:0,visible:!0},i=0;i<e.filters[o].list.length;i++)e.filters[o].list[i].visible=!0,r.values.push(e.filters[o].list[i].key),r.includeTypes.push(e.filters[o].list[i].key);e.filterConditions.push(r),C&&console.log("MapCtrl, init filtro entity_type: ",e.filters);var s=e.config.types.categories;for(C&&console.log("MapCtrl, init filtri: ",s),i=0;i<s.length;i++){var a=s[i];0==i&&(e.favCat=a.category_space);var o=a.name,n="id",r={key:"category_list",name:o,values:[],mandatory:{condition:!0,values:!1},equal:!1,excludeRule:!1,excludeProperty:!1,includeTypes:a.entities,includeCondition:{value:{category_space:a.category_space},property:"categories"}};for(e.filters[o]={list:a.categories,toggle:1,label:o,check:n,name:o,category_space:a.category_space,visible:a.is_visible},j=0;j<e.filters[o].list.length;j++)e.filters[o].list[j].visible=!0,e.filters[o].list[j].key=e.filters[o].list[j].id,r.values.push(e.filters[o].list[j].id);e.filterConditions.push(r),C&&console.log("MapCtrl, init filtro categoria: ",e.filters[o],r)}}function Z(){var i=[];for(k in e.config.types.list){var n="",o=p("translate")(e.config.types.list[k].name);n=n.concat('<i class="icon ').concat(e.config.types.list[k].icon).concat('"></i>'),n=n.concat(" ").concat(o),C&&console.log("test ",o),C&&console.log("MapCtrl, creazione dell'action sheet, aggiungo bottone: ",n),i.push({text:n,type:e.config.types.list[k].slug,simple_editor:e.config.types.list[k].simple_editor})}var s=p("translate")("CREATION_TEXT");C&&console.log("test ",s);var a=r.show({titleText:s,buttons:i,cancelText:'<i class="icon ion-ios-arrow-down"></i>',cancel:function(){C&&console.log("CANCELLED")},buttonClicked:function(i,n){C&&console.log("BUTTON CLICKED",i,n),e.switchEditMode(),a(),b.getCenter().then(function(i){var o={lat:i.lat,lng:i.lng,id:null,entity_type:n.type};n.simple_editor?e.$broadcast("simpleInsert",o):(console.log("MapCtrl, clickToAdd, params ",e.map,o),t.go("app.editor",o))},function(e){console.log("MapCtrl, clickToAdd, MapService.getCenter, error ",e)})}});C&&console.log("actionSheet",a),u.actionSheet=a,u.actionStatus=!0}function $(t){var i=Q(t);return i>-1?(delete e.map.markers[i],!0):!1}function J(t){return 1>t?!1:void b.get(t).then(function(i){C&&console.log("MapCtrl, updateMarker, entityFactory.get, refresh marker ",t,i);var n=Q(i.id);n>-1?e.map.markers[n]=i:e.map.markers.push(i)},function(e){console.log("MapCtrl, updateMarker, entityFactory.get, errore ",e)})}function Q(t){var i=e.map.markers.map(function(e){return e.id}).indexOf(t);return i>-1?i:-1}function et(t){if(t===!1)for(var i in e.map.layers.overlays)console.log("spengo livello ",i),e.map.layers.overlays[i].visible=!1;else if(t===!0)for(var n in e.map.layers.overlays)e.map.layers.overlays[n].visible=!0;else if(0!==t||e.map.layers.overlays[0].visible)if(0===t&&e.map.layers.overlays[0].visible)for(var r in self.map.layers.overlays)e.map.layers.overlays[r].visible=!1;else e.map.layers.overlays[t].visible=e.map.layers.overlays[t].visible?!1:!0;else for(var o in self.map.layers.overlays)e.map.layers.overlays[o].visible=!0}function tt(t){switch(t){case"edit":e.editMode=!0;break;default:e.editMode=!1}b.changeMode(t),et(!e.editMode)}function it(t){var i=Q(t);if(i>-1){var n=e.map.markers[i];C&&console.log("Location: ",n);var o={lat:n.lat,lng:n.lng,zoom:parseInt(M.map.zoom_create)};F(o),C&&console.log("nuova posizione",self.map.center)}else C&&console.log("chiamo per :",t),b.get(t).then(function(t){C&&console.log("Location: ",t),C&&console.log("nuova posizione",e.map.center);var i={lat:t.lat,lng:t.lng,zoom:parseInt(M.map.zoom_create)};F(i)},function(e){C&&console.log("Location error: ",e)})}var C=!0;!e.geojson&&e.config.map.area&&(e.geojson={data:e.config.map.area.data,style:e.config.map.area.style}),e.config||(e.config=_);var M=_;e.isMobile||(e.isMobile=ionic.Platform.isIPad()||ionic.Platform.isIOS()||ionic.Platform.isAndroid()||ionic.Platform.isWindowsPhone()),e.locate||(e.locate=z),e.area||(e.area=E.getArea(),e.buildings=e.area.places,C&&console.log("Area e favPlaces: ",e.area)),"undefined"===e.isLoggedIn&&(e.isLoggedIn=!1),"undefined"===self.watchSearchEnabled&&(self.watchSearchEnabled=!0),(!e.map||angular.equals(e.map,{}))&&(e.map=map,console.log("Init map ",e.map,map)),e.categories||(e.categories=e.config.types.categories),e.events={map:{enable:["click","moveend","focus"],logic:"broadcast"},marker:{enable:["click"],logic:"broadcast"}},e.options1=null,e.details1="",e.editMode=!1;{var T,S=M.behaviour.moveend_delay;M.behaviour.bbox_reload_time}e.markersFiltered||q(),e.$on("$stateChangeSuccess",function(){if(self.watchSearchEnabled=!1,C&&console.log("sono in app.map e vengo da ",u.previousState,n),"app.maps"!==u.previousState){var t=x.readUser();switch(t?(C&&console.log("isLoggedIn? ",!0),e.isLoggedIn=!0):e.isLoggedIn=!1,e.map=b.getMap(),C&&console.log("MapCtrl, map all'ingresso di stato ",e.map),u.previousState){case"app.editor":C&&console.log("MapCtrl, cambio stato da intro: ",n),n.entity&&H(n.entity),z(n);break;case"login":C&&console.log("MapCtrl, gestore cambio di stato, case:login ",n),z(n),n.entity&&P(n.entity);break;default:C&&console.log("MapCtrl, gestione stato, default",n)}C&&console.log("Check parametri: ",n,c.search())}else C&&console.log("MapCtrl, gestione stato, ignorato perche' vengo da ",u.previousState)}),e.$on("leafletDirectiveMarker.mymap.click",function(t,i){console.log("MARKER CLICK...controlla, args: ",i,t),e.editMode||(i.model.focus=!1,P(i.model.id)),t.preventDefault()}),e.$on("leafletDirectiveMap.mymap.moveend",function(t){C&&console.log("Event: moveend...",e.map),e.editMode||(S>0?(T&&(C&&console.log("clearTimeout"),clearTimeout(T)),T=setTimeout(U,S)):U()),t.preventDefault()}),e.$on("openPlaceModal",function(e,t){I(t.marker),e.preventDefault()}),e.$on("closePlaceModal",function(e){N("entity"),e.preventDefault()}),e.$watch(function(){return c.search()},function(t,i){C&&console.log("cambio search! ",t," vecchi parametri: ",i," devo controllare? ",self.watchSearchEnabled),self.watchSearchEnabled&&(C&&console.log("check paramentro entity, old: ",i.entity," nuovo: ",t.entity," scelta ",!i.entity&&t.entity||i&&t.entity!=parseInt(i.entity)),t.entity?(C&&console.log("trovato parametro entity, devo aprire una modal: ",t.entity),P(t.entity),z(parseInt(t.entity))):(e.$broadcast("markerClickClose"),t.lat&&t.lng&&t.zoom&&(e.map.center.lat!=t.lat||t.lng!=e.map.center.lng||t.zoom!=e.map.center.zoom)&&z(t))),self.watchSearchEnabled=!0},!0),e.filtred=[],e.$watch("map.markers",function(){e.map&&e.map.markers&&(C&&console.log("cambio dei Markers: ",e.map.markers,e.map.markers.length),e.filtred=p("filter")(e.map.markers,W),C&&console.log("cambio dei Markers, nuovi markers filtrati: ",e.filtred,e.filtred.length))},!0),e.$watch("filterConditions",function(){e.map&&e.map.markers&&(C&&console.log("cambio dei filtri, ecco i Markers che considero: ",e.map.markers,e.map.markers.length),e.filtred=p("filter")(e.map.markers,W),C&&console.log("Cambio filtro, nuovi marker filtrati: ",e.filtred))},!0),e.$watch("filtred",function(){C&&console.log("cambio dei Markers, nuovi markers filtrati: ",e.filtred,e.filtred.length),Y()},!0),e.$on("startEditing",function(t,i){z(i),tt("edit"),e.updateEntity=i.id}),e.$on("endEditing",function(e,t){H(t.marker.id),P(t.id),e.preventDefault()}),e.$on("deleteMarker",function(e,t){$(t.id),e.preventDefault()}),e.$on("timeUpdate",function(t){b.resetMarkers(),e.$broadcast("leafletDirectiveMap.mymap.moveend"),t.preventDefault()}),e.isString=function(e){return"string"==typeof e?!0:!1},e.greaterThan=function(e,t){return function(i){return i[e]>t}},e.differentThan=function(e,t){return function(i){return i[e]!=t}},e.switchEditMode=function(){e.config.dev&&C&&console.log("MapCtrl, switchEditMode editMode ",e.map.mode),e.editMode?(tt("view"),e.updateEntity=null):tt("edit")},e.goToWall=function(){t.go("app.wall")},e.showModalFavPlace=function(){e.filterFavPlace={},C&&console.log("check area: ",e.area),o.fromTemplateUrl("templates/form/filterFavPlace.html",{scope:e,animation:"fade-in",backdropClickToClose:!0,hardwareBackButtonClose:!0,focusFirstInput:!0}).then(function(t){e.filterFavPlace.modal=t,e.openFilterFavPlace(),u.modal=t,u.modalStatus=!0}),e.openFilterFavPlace=function(){e.filterFavPlace.modal.show()},e.closeFilterFavPlace=function(){e.filterFavPlace.modal.hide(),e.filterFavPlace.modal.remove()},e.$on("$destroy",function(){e.filterFavPlace.modal.remove()})},e.showMFilterCat=function(){e.filterCat={},o.fromTemplateUrl("templates/form/filterCat.html",{scope:e,animation:"fade-in"}).then(function(t){e.filterCat.modal=t,e.openFilterCat(),u.modal=t,u.modalStatus=!0}),e.openFilterCat=function(){e.filterCat.modal.show()},e.closeFilterCat=function(){e.filterCat.modal.hide(),e.filterCat.modal.remove()},e.$on("$destroy",function(){e.filterCat.modal.remove()})},e.showASEdit=function(){if(e.updateEntity){var i={lat:e.map.center.lat,lng:e.map.center.lng,id:e.updateEntity};t.go("app.editor",i),e.switchEditMode()}else Z()},e.toggleFilter=function(t,i){var n=e.filterConditions.map(function(e){return e.name}).indexOf(t);if(C&&console.log("Indice regola filtro: ",n),0>n&&(e.filterConditions[n]={},e.filterConditions[n].values=[null],e.filterConditions[n].mandatory={condition:!0,values:!1},e.filterConditions[n].equal=!1,e.filterConditions[n].excludeRule=!1,e.filterConditions[n].excludeProperty=!1,C&&console.log("Init della regola: ",e.filterConditions[n])),C&&console.log("Chiave? ",i),i){var o=e.filterConditions[n].values.indexOf(i);C&&console.log("Aggiungo/rimuovo chiave: ",i," a ",e.filterConditions[n].values," indice: ",o),C&&console.log("Intervengo qui: ",e.filters[t].list);var r=e.filters[t].list.map(function(e){return e.key}).indexOf(i);0>o?(e.filterConditions[n].values.push(i),e.filters[t].list[r].visible=!0):(e.filterConditions[n].values.splice(o,1),e.filters[t].list[r].visible=!1),e.filterConditions[n].excludeRule=!1,e.filterConditions[n].excludeRule=!1,e.filters[t].toggle=1,C&&console.log("Aggiunta o rimossa chiave: ",e.filterConditions[n].values," vado in stato 1")}else C&&console.log("Niente chiave, faccio toggle"),e.filterConditions[n].excludeRule||e.filterConditions[n].excludeProperty?e.filterConditions[n].excludeRule&&!e.filterConditions[n].excludeProperty?(C&&console.log("Stato 2 vado in 3"),e.filterConditions[n].excludeRule=!1,e.filterConditions[n].excludeProperty=!0,e.filters[t].toggle=3):!e.filterConditions[n].excludeRule&&e.filterConditions[n].excludeProperty&&(C&&console.log("Stato 3 vado in 1"),e.filterConditions[n].excludeRule=!1,e.filterConditions[n].excludeProperty=!1,e.filters[t].toggle=1):(C&&console.log("Stato 1 vado in 2"),e.filterConditions[n].excludeRule=!0,e.filterConditions[n].excludeProperty=!1,e.filters[t].toggle=2)},e.changeFavCat=function(t){d.show({animation:"fade-in",showBackdrop:!1,maxWidth:50,showDelay:0}),C&&console.log("cambio favCat da ",e.favCat," a ",t),e.favCat=t;for(i in e.markersFiltered)C&&console.log("cambio icona al marker ",e.markersFiltered[i]),e.markersFiltered[i].icon=e.markersFiltered[i].icons[e.favCat]?e.markersFiltered[i].icons[e.favCat]:e.markersFiltered[i].icon;d.hide(),e.closeFilterCat()},e.showWall=function(){C&&console.log("MapCtrl, showWall!"),C&&console.log("check area: ",e.area),e.markerChildren={},o.fromTemplateUrl("templates/form/wall.html",{scope:e,animation:"fade-in"}).then(function(t){e.wall=t,e.wall.show()}),e.closeWall=function(){e.wall.hide(),e.wall.remove()},e.$on("$destroy",function(){e.wall.remove()}),e.loadChildren=function(t){var i=e.config.types.child_relations[t.entity_type],n=!1,o={};for(key in i){var r=i[key],s=b.searchFor(t.id,r.field);C&&console.log("Cerco per il campo ",r.field," il marker con valore ",t.id," risultato ",s),s.length>0&&(o[key]=angular.copy(r),o[key].list=s,n=!0)}n&&(C&&console.log("Trovati figli per ",t.id," figli ",o),e.markerChildren[t.id]=o)},e.clickWallItem=function(t){e.closeWall(),P(t.id),z(t.id)}}}]).run(function(e,t,i,n){self.map=e.initMap();var o=config.behaviour.bbox_reload_time,r=!1,s=function(){i.cancel(r),r=i(function(){console.log("polling!"),n.$broadcast("leafletDirectiveMap.mymap.moveend"),s()},o)};s()});